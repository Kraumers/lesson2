"""
1. Выяснить тип результата выражений:
15 * 3
15 / 3
15 // 2
15 ** 2
"""

h = 15 * 3
print(f'15*3 тип {type(h)}')
h = 15 / 3
print(f'15/3 тип {type(h)}')
h = 15 // 2
print(f'15//2 тип {type(h)}')
h = 15 ** 2
print(f'15**2 тип {type(h)}')

"""
2. Дан список:
['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
Необходимо его обработать — обособить каждое целое число кавычками и дополнить нулём до двух разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
Новый список не создавать! Сформировать из обработанного списка строку:
в "05" часов "17" минут температура воздуха была "+05" градусов
"""

data = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздух', 'была', '+5', 'градусов']
first_id = id(data)

idx = 0
while idx < len(data):
    if data[idx].lstrip('+-').isdigit():
        number_sign = data[idx][:1]
        if number_sign not in ('+', '-'):
            number_sign = ''
            number = data[idx]
        else:
            number = data[idx][1:]
        data[idx] = f'{number_sign}{int(number):02d}'
        data.insert(idx, '"')
        data.insert(idx + 2, '"')
        idx += 2
    else:
        idx += 1

second_id = id(data)

print(data)
print(f'\nПосле обработки это тот же объект? {first_id == second_id}')

msg = ' '.join(data)
is_first_bracket = True
idx_start_find = 0
while True:
    current_bracket_idx = msg.find('"', idx_start_find)
    if current_bracket_idx == -1:
        break
    if is_first_bracket:
        msg = ''.join((msg[:current_bracket_idx + 1], msg[current_bracket_idx + 2:]))
        is_first_bracket = False
    else:
        msg = ''.join((msg[:current_bracket_idx - 1], msg[current_bracket_idx:]))
        is_first_bracket = True
    idx_start_find = current_bracket_idx + 1
print(f'\n{msg}')

"""
3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.
"""

data = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

for elem in data:
    print(f'Привет, {elem.split(" ")[-1].capitalize()}!')

"""
4. Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
Дан список, содержащий искажённые данные с должностями и именами сотрудников:
['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?
"""

data = [291.12, 9323.98, 5296.0, 5680.08, 4867.5, 5376.96, 73.24, 7526.01, 8552.87, 3228.17, 9771]

id_1 = id(data)
print(f'id = {id_1}\n{data}')

print('\n----- A -----')
print(', '.join([f'{int(x):,} руб {int(x % 1 * 100):02} коп' for x in data]))

print('\n----- B -----')
data.sort()
id_2 = id(data)
print(data)
print(f'Список тот же? {id_1 == id_2}')

print('\n----- C -----')
data_sort_reverse = sorted(data, reverse=True)
id_3 = id(data_sort_reverse)
print(data_sort_reverse)
print(f'Это новый список? {id_1 != id_3}')

print('\n----- D -----')
print(data[len(data) - 5:])